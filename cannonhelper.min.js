function CannonHelper(e,t,i,o){o||(o=1/60),this.bodies=[],this.world=new CANNON.World,this.world.gravity.set(e,t,i),this.world.broadphase=new CANNON.NaiveBroadphase,this.timeStep=o,this.newBody=function(e,t,i){var o=new CANNON.Body({mass:t});i||(i=this.getGeometry(e)),o.addShape(i),o.parent=e,o.position.copy(e.position),o.quaternion.copy(e.quaternion);var n=this;return o.addPart=function(e,t){t||(t=n.getGeometry(e));var i=new CANNON.Vec3,o=new CANNON.Vec3;i.copy(e.position),o.copy(e.quaternion),this.addShape(t,i)},o},this.getGeometry=function(e){var t={},i=e.geometry,o=i.parameters;switch(i.type){case"BoxGeometry":t=new CANNON.Box(new CANNON.Vec3(o.width/2,o.height/2,o.depth/2));break;case"SphereGeometry":t=new CANNON.Sphere(o.radius);break;case"CylinderGeometry":t=new CANNON.Cylinder(o.radiusTop,o.radiusBottom,o.height,o.radialSegments);break;case"PlaneGeometry":t=new CANNON.Box(new CANNON.Vec3(o.width/2,o.height/2,.5));break;default:console.log("Specify a Cannon.js shape")}return t},this.addBody=function(e,t,i){var o=this.newBody(e,t,i);this.add(o)},this.add=function(e){this.world.add(e),this.bodies.push(e)},this.update=function(){for(var e in this.bodies){var t=this.bodies[e];t.parent?(t.parent.position.copy(t.position),t.parent.quaternion.copy(t.quaternion)):this.world.remove(t)}this.world.step(this.timeStep)}}